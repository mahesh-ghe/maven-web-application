pipeline{
	agent {
		lable 'nodes'
	}
	
	tools {
		maven 'maven3.8.6'
	}
		
	triggers {
		pollSCM '* * * * *'
	}
	
	options {
		buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
	}
	
	stages{
		stage('checkout_code'){
			steps{
				notifyBuild('STARTED')
				git branch: 'dev', credentialsId: 'e0162146-458b-46fc-b154-d4bc60ecd3c6', url: 'https://github.com/mahesh-ghe/maven-web-application.git'
			}
		}
	
		stage('build'){
			steps{
				sh 'mvn clean package'
			}
		}
	
		stage('SonarQube_report'){
			steps{
				sh 'mvn sonar:sonar'
			}
		}
	
		stage('deploy_artifacts_into_nexus_repo'){
			steps{
				sh 'mvn clean deploy'
			}
		}
		stage('Deply_app_to_tomcat'){
			steps{
				sshagent(['4e603ae0-8e40-4518-a740-0621de9768a2']){
					sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.32.189:/opt/apache-tomcat-9.0.65/webapps"
				}
			}
		}
	}
	
	post {
		aborted {
			notifyBuild(currentBuild.result)
		}
		success {
			notifyBuild(currentBuild.result)
		}
		failure {
			notifyBuild(currentBuild.result)
		}
	}

	
	
}

def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means success
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: "#pipeline_project")
}
